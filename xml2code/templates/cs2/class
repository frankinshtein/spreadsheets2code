/*
 file was automatically generated
*/

using System;
using System.Collections.Generic;
using System.Xml;

namespace {{lang.args.package}}
{
    public class {{cls.nice_name}}
    {
        public static List<{{cls.nice_name}}> itemsList = new List<{{cls.nice_name}}>();
        {% if cls.has_id %}
        public static Dictionary<string, {{cls.nice_name}}> itemsDict = new Dictionary<string, {{cls.nice_name}}>();
        {% endif %}

        {% for field in cls.fields %}
            {% if field.array and field.named_list %}
        public Dictionary<string, List<{{ field.type.object_name }}>> {{ field.nice_name}};
            {% elif field.array %}
        public List<{{ field.type.object_name }}> {{ field.nice_name}};
            {% elif field.named_list %}
        public Dictionary<string, {{ field.type.object_name }}> {{ field.nice_name}};
            {% else %}
        public {{ field.type.nice_name }} {{ field.nice_name}};
            {% endif %}
        {% endfor %}

        public int _indexInArray;
        public XmlNode _xmlNode;

        {% if cls.has_id %}
        //@NotNull
        public static {{cls.nice_name}} get(string id)
        {

            {{cls.nice_name}} obj = getOrDefault(id, null);
            if (obj != null)
                return obj;
            throw new Exception("not found element in {{cls.nice_name}} " + id);
        }

        public static {{cls.nice_name}} getOrDefault(string id, {{cls.nice_name}} def = null)
        {
            {{cls.nice_name}} res = {{loader}}.utilGetItem(itemsDict, id, false);
            if (res != null)
                return res;
            return def;
        }
        {% endif %}

        public void init(XmlNode presetNode, {{loader}} loader)
        {
            {% for field in cls.fields_without_id %}
            {% if field.ext %}
            {% elif field.array and field.named_list %}
            {{field.nice_name}} = {{loader}}.utilParse_NamedList(_xmlNode, "{{field.name}}", loader.preset, presetNode, loader.fnString2{{field.type.nice_name}});
            {% elif field.array %}
            {{field.nice_name}} = {{loader}}.utilParse_List(_xmlNode, "{{field.name}}", loader.preset, presetNode, loader.fnString2{{field.type.nice_name}});
            {% elif field.named_list %}
            {{field.nice_name}} = {{loader}}.utilParse_Named(_xmlNode, "{{field.name}}", loader.preset, presetNode, loader.fnString2{{field.type.nice_name}});
            {% else %}
            {{field.nice_name}} = {{loader}}.utilParse_Single(_xmlNode, "{{field.name}}", loader.preset, presetNode, loader.fnString2{{field.type.nice_name}});
            {% endif %}
            {% endfor %}
        }

        public {{cls.nice_name}}(){}


        public override string ToString()
        {
            return $"{id}";
        }
    }
}